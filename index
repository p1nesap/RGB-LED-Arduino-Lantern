//3 RGB LED lantern for Arduino

#define RED_PIN 9      // where the red pin is connected to
#define GREEN_PIN 10   // where the green pin is connected to
#define BLUE_PIN 11    // where the blue pin is connected to

#define RED_PIN2 5      // where the red pin is connected to
#define GREEN_PIN2 6   // where the green pin is connected to
#define BLUE_PIN2 7    // where the blue pin is connected to

#define RED_PIN3 2      // where the red pin is connected to
#define GREEN_PIN3 3   // where the green pin is connected to
#define BLUE_PIN3 4

//#define STAR for H-bridge motor? 

#define DELAY 30       // 20ms internal delay; increase for slower fades
#define DELAY2 70
#define DELAY3 50

int brightness = 0;    // how bright the LED is
int fadeAmount = 5;    // how many points to fade the LED by

void setup() {
  pinMode(GREEN_PIN, OUTPUT);
  pinMode(BLUE_PIN, OUTPUT);
  pinMode(RED_PIN, OUTPUT);
  pinMode(GREEN_PIN2, OUTPUT);
  pinMode(BLUE_PIN2, OUTPUT);
  pinMode(RED_PIN2, OUTPUT);
  pinMode(GREEN_PIN3, OUTPUT);
  pinMode(BLUE_PIN3, OUTPUT);
  pinMode(RED_PIN3, OUTPUT);
  
  pinMode(STAR, OUTPUT);
}

void loop() {
  
  
  
  //1 fade from green to red
  for(int i=0; i<255; i++) {
    analogWrite(RED_PIN, i);
    analogWrite(GREEN_PIN, 255-i);
    analogWrite(BLUE_PIN, 0);
    analogWrite(STAR, brightness);
      // change the brightness for next time through the loop:
  brightness = brightness + fadeAmount;

  // reverse the direction of the fading at the ends of the fade: 
  if (brightness == 0 || brightness == 255) {
    fadeAmount = -fadeAmount ; 
  }     
    delay(DELAY);
  }
  
    //2 fade from red to blue
  for(int i=0; i<255; i++) {
    analogWrite(RED_PIN2, 255-i);
    analogWrite(GREEN_PIN2, 0);
    analogWrite(BLUE_PIN2, i);
    delay(DELAY2);
  }
  
    //3 fade from blue to green
  for(int i=0; i<255; i++) {
    analogWrite(RED_PIN3, 0);
    analogWrite(GREEN_PIN3, i);
    analogWrite(BLUE_PIN3, 255-i);
    delay(DELAY3);
  }

//NEXT

  //1 fade from red to blue
  for(int i=0; i<255; i++) {
    analogWrite(RED_PIN, 255-i);
    analogWrite(GREEN_PIN, 0);
    analogWrite(BLUE_PIN, i);
    delay(DELAY);
  }
  
   //2 fade from green to red
  for(int i=0; i<255; i++) {
    analogWrite(RED_PIN2, i);
    analogWrite(GREEN_PIN2, 255-i);
    analogWrite(BLUE_PIN2, 0);
    delay(DELAY2);
  }
  
    //3 fade from red to blue
  for(int i=0; i<255; i++) {
    analogWrite(RED_PIN3, 255-i);
    analogWrite(GREEN_PIN3, 0);
    analogWrite(BLUE_PIN3, i);
    delay(DELAY3);
  }
  
  //NEXT

  //1 fade from blue to green
  for(int i=0; i<255; i++) {
    analogWrite(RED_PIN, 0);
    analogWrite(GREEN_PIN, i);
    analogWrite(BLUE_PIN, 255-i);
    delay(DELAY);
  }
   
  //2 fade from blue to green
  for(int i=0; i<255; i++) {
    analogWrite(RED_PIN2, 0);
    analogWrite(GREEN_PIN2, i);
    analogWrite(BLUE_PIN2, 255-i);
    delay(DELAY2);
  }
    //3 fade from green to red
  for(int i=0; i<255; i++) {
    analogWrite(RED_PIN3, i);
    analogWrite(GREEN_PIN3, 255-i);
    analogWrite(BLUE_PIN3, 0);
  
    delay(DELAY3);
  }

}
